plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
}

// Load local properties safely
def localProperties = new Properties()
def localPropertiesFile = file("${rootDir}/local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withInputStream { localProperties.load(it) }
}

android {
    compileSdk 34

    defaultConfig {
        minSdk 24
        targetSdk 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        // Safely fetch GITHUB_TOKEN from local properties
        def githubToken = localProperties.getProperty('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', "")
        buildConfigField("String", "GITHUB_TOKEN", "\"${githubToken}\"")
        buildConfigField("String", "BASE_URL", "\"https://api.github.com/\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '18'
    }
}

dependencies {
    def room_version = "2.5.0"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    def retrofit_version = "2.9.0"
    def logging_interceptor_version = "4.10.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"

    def kotlin_coroutines_version = "1.7.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    def lifecycle_livedata_version = "2.6.0"
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_livedata_version"
}
